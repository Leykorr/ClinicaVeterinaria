// <auto-generated />
using System;
using ClinicaVet.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClinicaVet.App.Persistencia.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210924220026_Entidades")]
    partial class Entidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ClinicaVet.App.Dominio.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Anotacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("auxiliarId")
                        .HasColumnType("int");

                    b.Property<int?>("medicamentesId")
                        .HasColumnType("int");

                    b.Property<int?>("veterinarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("auxiliarId");

                    b.HasIndex("medicamentesId");

                    b.HasIndex("veterinarioId");

                    b.ToTable("Consultas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Consulta");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dueño")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("raza")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mascota");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Medicamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Medicinas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("medicamentos");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cedula")
                        .IsUnique()
                        .HasFilter("[Cedula] IS NOT NULL");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.HistoriaClinica", b =>
                {
                    b.HasBaseType("ClinicaVet.App.Dominio.Consulta");

                    b.Property<string>("ListaConsulta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("mascotaId")
                        .HasColumnType("int");

                    b.HasIndex("mascotaId");

                    b.HasDiscriminator().HasValue("HistoriaClinica");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Auxiliar", b =>
                {
                    b.HasBaseType("ClinicaVet.App.Dominio.Usuario");

                    b.Property<string>("Turno")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Auxiliar");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("ClinicaVet.App.Dominio.Usuario");

                    b.Property<string>("HorarioDia")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.Consulta", b =>
                {
                    b.HasOne("ClinicaVet.App.Dominio.Auxiliar", "auxiliar")
                        .WithMany()
                        .HasForeignKey("auxiliarId");

                    b.HasOne("ClinicaVet.App.Dominio.Medicamentos", "medicamentes")
                        .WithMany()
                        .HasForeignKey("medicamentesId");

                    b.HasOne("ClinicaVet.App.Dominio.Veterinario", "veterinario")
                        .WithMany()
                        .HasForeignKey("veterinarioId");

                    b.Navigation("auxiliar");

                    b.Navigation("medicamentes");

                    b.Navigation("veterinario");
                });

            modelBuilder.Entity("ClinicaVet.App.Dominio.HistoriaClinica", b =>
                {
                    b.HasOne("ClinicaVet.App.Dominio.Mascota", "mascota")
                        .WithMany()
                        .HasForeignKey("mascotaId");

                    b.Navigation("mascota");
                });
#pragma warning restore 612, 618
        }
    }
}
